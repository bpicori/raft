---
description: 
globs: 
alwaysApply: false
---
# Todo Implementation Workflow

This rule provides a systematic approach for implementing tasks from todo files with automatic test verification and completion tracking.

## Todo File Structure

Todo files contain implementation plans with:
- Numbered sections with specific tasks
- Checkboxes: `- [x]` (completed) or `- [ ]` (pending)
- File paths and implementation details
- Dependencies between tasks

## Implementation Workflow

### 1. Task Selection
- Read the todo file to identify the next uncompleted task (`- [ ]`)
- Follow numerical order and respect dependencies
- Focus on one task at a time

### 2. Implementation
- Follow the specific instructions in the todo file for each task
- Use existing similar files as templates (patterns are established in the codebase)
- Look at completed tasks for reference on implementation patterns

### 3. Testing and Verification
After implementation, run the project test suite:

```bash
make test
```

**Critical Rule**: Only mark a task as complete if `make test` passes with exit code 0.

### 4. Todo File Update
When tests pass successfully:
- Locate the specific task line in the todo file
- Change `- [ ]` to `- [x]`
- Update any sub-tasks if applicable

### 5. Error Handling
If `make test` fails:
- Analyze the error output
- Fix the implementation issues
- Re-run `make test`
- Only proceed to marking complete when tests pass

## Implementation Rules

1. **Never skip testing** - Always run `make test` before marking complete
2. **One task at a time** - Complete current task before moving to next
3. **Follow todo instructions** - All implementation details are in the todo file
4. **Respect dependencies** - Don't implement step N if step N-1 isn't complete
5. **Update progress** - Mark tasks complete only after successful testing

## Quick Reference Commands

```bash
# Test before starting (verify current state)
make test

# Test after implementation (verify changes work)
make test

# Find next uncompleted task (replace 'todo-file.txt' with actual filename)
grep -n "- \[ \]" todo-file.txt | head -1
```

Remember: The todo file contains all the specific implementation details. This rule focuses on the workflow, testing, and progress tracking.
