syntax = "proto3";

package dto;

option go_package = "./pkgs/dto";

// Define RPC messages
message RaftRPC {
  string type = 1;
  oneof args {
    VoteRequest voteRequest = 2;
    VoteResponse voteResponse = 3;
    LogRequest logRequest = 4;
    LogResponse logResponse = 5;
    NodeStatusRequest nodeStatusRequest = 6;
    NodeStatusResponse nodeStatusResponse = 7;
    SetCommandRequest setCommandRequest = 8;
    OkResponse okResponse = 9;
  }
}

message VoteRequest {
  string nodeId = 1;
  int32 term = 2;
  string candidateId = 3;
  int32 lastLogIndex = 4;
  int32 lastLogTerm = 5;
}

message VoteResponse {
  string nodeId = 1;
  int32 term = 2;
  bool voteGranted = 3;
}

message Command {
  string operation = 1;
  string key = 2;
  string value = 3;
}

message LogEntry {
  int32 term = 1;
  Command command = 2;
}

message LogRequest {
  string leaderId = 1;
  int32 term = 2;
  int32 prefixLength = 3;
  int32 prefixTerm = 4;
  int32 leaderCommit = 5;
  repeated LogEntry suffix = 6;
}

message LogResponse {
  string followerId = 1;
  int32 term = 2;
  int32 ack = 3;
  bool success = 4;
}

message NodeStatusRequest {}

message NodeStatusResponse { 
  string nodeId = 1;
  int32 currentTerm = 2;
  string votedFor = 3;
  string currentRole = 4;
  string currentLeader = 5;
  int32 commitLength = 6;
  repeated LogEntry logEntries = 7;
}

message SetCommandRequest {
  string key = 1;
  string value = 2;
}

message OkResponse {
  bool ok = 1;
}
