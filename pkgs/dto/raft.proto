syntax = "proto3";

package dto;

option go_package = "./pkgs/dto";


message VoteRequest {
  string nodeId = 1;
  int32 term = 2;
  string candidateId = 3;
  int32 lastLogIndex = 4;
  int32 lastLogTerm = 5;
}

message VoteResponse {
  string nodeId = 1;
  int32 term = 2;
  bool voteGranted = 3;
}


message LogRequest {
  string leaderId = 1;
  int32 term = 2;
  int32 prefixLength = 3;
  int32 prefixTerm = 4;
  int32 leaderCommit = 5;
  repeated LogEntry suffix = 6;
}

message LogResponse {
  string followerId = 1;
  int32 term = 2;
  int32 ack = 3;
  bool success = 4;
}

message NodeStatusRequest {}

message NodeStatusResponse { 
  string nodeId = 1;
  int32 currentTerm = 2;
  string votedFor = 3;
  string currentRole = 4;
  string currentLeader = 5;
  int32 commitLength = 6;
  repeated LogEntry logEntries = 7;
}

/* Log Entry */
message LogEntry {
  int32 term = 1;
  string uuid = 2;
  Command command = 3;
}

message Command {
  string operation = 1;
  oneof args {
    SetCommand setCommand = 2;
    IncrCommand incrCommand = 3;
    DecrCommand decrCommand = 4;
    RemoveCommand removeCommand = 5;
    LpushCommand lpushCommand = 6;
    LpopCommand lpopCommand = 7;
    LindexCommand lindexCommand = 8;
  }
}

message SetCommand {
  string key = 1;
  string value = 2;
}

message IncrCommand {
  string key = 1;
}

message DecrCommand {
  string key = 1;
}

message RemoveCommand {
  string key = 1;
}

message LpushCommand {
  string key = 1;
  repeated string elements = 2;
}

message LpopCommand {
  string key = 1;
}

message LindexCommand {
  string key = 1;
  int32 index = 2;
}

/* Application */
message SetCommandRequest {
  string key = 1;
  string value = 2;
}

message GenericResponse {
  bool ok = 1;
}

/* Raft RPC
  All the messages that are received from outside in TCP
*/
message RaftRPC {
  string type = 1;
  oneof args {
    VoteRequest voteRequest = 2;
    VoteResponse voteResponse = 3;
    LogRequest logRequest = 4;
    LogResponse logResponse = 5;
    NodeStatusRequest nodeStatusRequest = 6;
    NodeStatusResponse nodeStatusResponse = 7;
    GenericResponse genericResponse = 8;
    SetCommandRequest setCommandRequest = 9;
    GetCommandRequest getCommandRequest = 10;
    GetCommandResponse getCommandResponse = 11;
    IncrCommandRequest incrCommandRequest = 12;
    IncrCommandResponse incrCommandResponse = 13;
    DecrCommandRequest decrCommandRequest = 14;
    DecrCommandResponse decrCommandResponse = 15;
    RemoveCommandRequest removeCommandRequest = 16;
    LpushCommandRequest lpushCommandRequest = 17;
    LpushCommandResponse lpushCommandResponse = 18;
    LpopCommandRequest lpopCommandRequest = 19;
    LpopCommandResponse lpopCommandResponse = 20;
    LindexCommandRequest lindexCommandRequest = 21;
    LindexCommandResponse lindexCommandResponse = 22;
  }
}

message StateMachineState {
  int32 current_term = 1;
  string voted_for = 2;
  repeated LogEntry log_entry = 3;
  int32 commit_length = 4;
} 

message GetCommandRequest {
  string key = 1;
}

message GetCommandResponse {
  string value = 1;
  string error = 2;
}

message IncrCommandRequest {
  string key = 1;
}

message IncrCommandResponse {
  int32 value = 1;
  string error = 2;
}

message DecrCommandRequest {
  string key = 1;
}

message DecrCommandResponse {
  int32 value = 1;
  string error = 2;
}

message RemoveCommandRequest {
  string key = 1;
}

message LpushCommandRequest {
  string key = 1;
  repeated string elements = 2;
}

message LpushCommandResponse {
  int32 length = 1;
  string error = 2;
}

message LpopCommandRequest {
  string key = 1;
}

message LpopCommandResponse {
  string element = 1;
  string error = 2;
}

message LindexCommandRequest {
  string key = 1;
  int32 index = 2;
}

message LindexCommandResponse {
  string element = 1;
  string error = 2;
}
